on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: CI

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2
      - name: Lint (rustfmt)
        run: cargo xfmt --check
      - name: Lint (clippy)
        run: cargo clippy --all-features --all-targets

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        # 1.60 is the MSRV
        rust-version: [ "1.60", stable ]
      fail-fast: false
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4
      - uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2
      - name: Build
        run: cargo build
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Test
        run: cargo nextest run --all-features
      - name: Delete Cargo.lock and test against latest versions
        if: matrix.rust-version == 'stable'
        run: |
          rm Cargo.lock
          cargo nextest run --all-features
